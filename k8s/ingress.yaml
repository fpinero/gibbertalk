apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gibbersound-ingress
  namespace: gibbersound
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/connection-upgrade-enabled: "true"
    nginx.ingress.kubernetes.io/websocket-services: "goaccess"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
        location ~ ^/(?:index\.html)?$ {
            add_header X-App-Host $host;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            expires off;
        }
        location /ws {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    # Anotaciones espec√≠ficas de Traefik si son necesarias
    # traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  - host: "gibbersound.com"  # Reemplaza con tu dominio real
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: gibbersound-frontend
            port:
              number: 80
  - host: "www.gibbersound.com"  # Reemplaza con tu dominio real con www
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: gibbersound-frontend
            port:
              number: 80 